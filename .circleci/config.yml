version: 2.1

executors:
  golang:
    docker:
      - image: cimg/go:1.20.1

jobs:
  install-dependencies:
    working_directory: ~/auth-ms
    executor: golang
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install dependencies
          command: go mod download
      - run:
          name: Verify installation
          command: go mod verify
      - save_cache:
          paths:
            - "/go/pkg/mod"
          key: go-mod-v4-{{ checksum "go.sum" }}
  build-application:
    working_directory: ~/auth-ms
    executor: golang
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Create environment variable
          command: cp app-sample.env app.env
      - run:
          name: Build application
          command: go build -v -o vesicash-auth-ms
      - persist_to_workspace:
          root: .
          paths:
            - vesicash-auth-ms
            - app.env
  test-application:
    docker:
      - image: cimg/go:1.20.1
      - image: cimg/postgres:14.0
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: auth
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Run tests
          command: |
            cat app.env
            go test -v  ./tests/... -timeout 99999s

workflows:
  default:
    jobs:
      - install-dependencies
      - build-application:
          requires:
            - install-dependencies
      - test-application:
          requires:
            - build-application
